// <auto-generated />
using System;
using MembershipPortal.core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MembershipPortal.core.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230131130636_seed_sectorcategory")]
    partial class seed_sectorcategory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MembershipPortal.data.BrandInformation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("brandname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("registrationid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("BrandInformations");
                });

            modelBuilder.Entity("MembershipPortal.data.BrickCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("brick")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("brick_id")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("BrickCategories");
                });

            modelBuilder.Entity("MembershipPortal.data.ClassCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassCode")
                        .HasColumnType("int");

                    b.Property<string>("ClassDefinition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FamilyCode")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FamilyCode");

                    b.ToTable("ClassCategories");
                });

            modelBuilder.Entity("MembershipPortal.data.Company", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfApproval")
                        .HasColumnType("datetime2");

                    b.Property<bool>("approvalstatus")
                        .HasColumnType("bit");

                    b.Property<string>("cacnumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("companyaddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("companyname")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("country_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdon")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateofincorporation")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("facebookaccount")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("factoryaddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("instagramaccount")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("isregistrationcompleted")
                        .HasColumnType("bit");

                    b.Property<int?>("localgovt_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("modifiedon")
                        .HasColumnType("datetime2");

                    b.Property<int>("numberofstaff")
                        .HasColumnType("int");

                    b.Property<string>("phonenumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("registrationdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("registrationid")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("sectorcategory_id")
                        .HasColumnType("int");

                    b.Property<int?>("sectortype_id")
                        .HasColumnType("int");

                    b.Property<int?>("state_id")
                        .HasColumnType("int");

                    b.Property<string>("twitteraccount")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("websiteaddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("id");

                    b.HasIndex("country_id");

                    b.HasIndex("localgovt_id");

                    b.HasIndex("sectorcategory_id");

                    b.HasIndex("sectortype_id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("MembershipPortal.data.CompanySectorCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("sectorcategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sectorcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CompanySectorCategories");
                });

            modelBuilder.Entity("MembershipPortal.data.CompanySectorType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("sectortype")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CompanySectorTypes");
                });

            modelBuilder.Entity("MembershipPortal.data.ContactInformation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("billingdesignation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("billingemail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("billingname")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("billingphonenumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ceodesignation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ceoemail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ceoname")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ceophonenumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("company_id")
                        .HasColumnType("int");

                    b.Property<string>("contactemail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("contactperson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("contactphonenumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("createdon")
                        .HasColumnType("datetime2");

                    b.Property<int?>("heardaboutus_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("modifiedon")
                        .HasColumnType("datetime2");

                    b.Property<string>("reasonforapplying")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("registrationId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("saleemail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("salename")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("salephonenumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("salesdesignation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("id");

                    b.HasIndex("heardaboutus_id");

                    b.ToTable("ContactInformations");
                });

            modelBuilder.Entity("MembershipPortal.data.Country", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("MembershipPortal.data.ExternalEntries.Models.CompanyModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfApproval")
                        .HasColumnType("datetime2");

                    b.Property<bool>("approvalstatus")
                        .HasColumnType("bit");

                    b.Property<string>("cacnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyaddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdon")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateofincorporation")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("factoryaddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isregistrationcompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("modifiedon")
                        .HasColumnType("datetime2");

                    b.Property<string>("phonenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("registrationdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("registrationid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CompanyModel");
                });

            modelBuilder.Entity("MembershipPortal.data.ExternalUnifiedModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("atccode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("datecreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datemodified")
                        .HasColumnType("datetime2");

                    b.Property<string>("functionalname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("genericname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("labeldescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("packsize")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("primarypackagingmaterial")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("productform")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("quantity")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("routeofadministration")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("shelflife")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("strength")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("tradeitemdescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("unitofmeasure")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("ExternalUnifiedModels");
                });

            modelBuilder.Entity("MembershipPortal.data.FamilyCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FamilyCode")
                        .HasColumnType("int");

                    b.Property<string>("FamilyDefinition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SegmentCode")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SegmentCode");

                    b.ToTable("FamilyCategories");
                });

            modelBuilder.Entity("MembershipPortal.data.GCPInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AssignBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("DateOfIssuance")
                        .HasColumnType("datetime2");

                    b.Property<int>("GtinCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsEmailSent")
                        .HasColumnType("bit");

                    b.Property<int>("MaxGtin")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("GCPInformations");
                });

            modelBuilder.Entity("MembershipPortal.data.GLNInformation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("asignedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyprefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("gln")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("glnrequestid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("registrationid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("GLNInformations");
                });

            modelBuilder.Entity("MembershipPortal.data.GTINFee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AdditionalFee")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NumberOfGtins")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("RenewalFee")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("GTINFees");
                });

            modelBuilder.Entity("MembershipPortal.data.GTINInformation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("checksum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyprefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("gtin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("productcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("registrationid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("GTINInformations");
                });

            modelBuilder.Entity("MembershipPortal.data.GTINRequest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("approvaldate")
                        .HasColumnType("datetime2");

                    b.Property<string>("approvedby")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("assignedby")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("assigneddate")
                        .HasColumnType("datetime2");

                    b.Property<int>("company_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdon")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateofrequest")
                        .HasColumnType("datetime2");

                    b.Property<int>("gtincount")
                        .HasColumnType("int");

                    b.Property<int>("gtinfee_id")
                        .HasColumnType("int");

                    b.Property<int?>("imagerequest_id")
                        .HasColumnType("int");

                    b.Property<bool>("isapproved")
                        .HasColumnType("bit");

                    b.Property<bool>("isgcpassigned")
                        .HasColumnType("bit");

                    b.Property<string>("registrationid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requesttype")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("totalcost")
                        .HasColumnType("float");

                    b.Property<DateTime?>("updatedon")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("company_id");

                    b.HasIndex("gtinfee_id");

                    b.ToTable("GTINRequests");
                });

            modelBuilder.Entity("MembershipPortal.data.HeardAboutUs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("method")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("HeardAboutUs");
                });

            modelBuilder.Entity("MembershipPortal.data.ITFInformation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("companyprefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("itf14")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("registrationid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("ITFInformations");
                });

            modelBuilder.Entity("MembershipPortal.data.ImageBank", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("imageReserve")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("registrationid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("ImageBanks");
                });

            modelBuilder.Entity("MembershipPortal.data.ImageRequest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("approvedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("createdon")
                        .HasColumnType("datetime2");

                    b.Property<int>("imagecount")
                        .HasColumnType("int");

                    b.Property<string>("imagetype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("isapproved")
                        .HasColumnType("bit");

                    b.Property<string>("registrationid")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("requestedate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updatedon")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("ImageRequests");
                });

            modelBuilder.Entity("MembershipPortal.data.LocalGovt", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("state_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("state_id");

                    b.ToTable("LocalGovts");
                });

            modelBuilder.Entity("MembershipPortal.data.NetContent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("id");

                    b.ToTable("NetContents");
                });

            modelBuilder.Entity("MembershipPortal.data.PackageLevel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("PackageLevels");
                });

            modelBuilder.Entity("MembershipPortal.data.PackagingType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("PackagingTypes");
                });

            modelBuilder.Entity("MembershipPortal.data.PharmaceuticalInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ATCCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActiveIngredient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectionOfUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenericName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryPackagingMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteOfAdministration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShelfLife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Strength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.ToTable("PharmaceuticalInformations");
                });

            modelBuilder.Entity("MembershipPortal.data.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPharma")
                        .HasColumnType("bit");

                    b.Property<string>("allergeninfo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("backimage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("brandinformation_id")
                        .HasColumnType("int");

                    b.Property<string>("brandname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("brickcategory_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("consumerfirstavailabilitydate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateoflisting")
                        .HasColumnType("datetime2");

                    b.Property<string>("directionofuse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("frontimage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("grossweight")
                        .HasColumnType("float");

                    b.Property<string>("gtin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("hasimage")
                        .HasColumnType("bit");

                    b.Property<string>("ingredients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("iscompleted")
                        .HasColumnType("bit");

                    b.Property<string>("leftimage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("lifespan")
                        .HasColumnType("int");

                    b.Property<string>("lifespanunit")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("marketingmessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("nafdacnumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("netcontent_id")
                        .HasColumnType("int");

                    b.Property<double>("netweight")
                        .HasColumnType("float");

                    b.Property<string>("otherimage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("packaginglevel_id")
                        .HasColumnType("int");

                    b.Property<int?>("packagingtype_id")
                        .HasColumnType("int");

                    b.Property<string>("productdescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("registrationid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("rightimage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("storageinstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("targetmarket_id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("brandinformation_id");

                    b.HasIndex("brickcategory_id");

                    b.HasIndex("netcontent_id");

                    b.HasIndex("packaginglevel_id");

                    b.HasIndex("packagingtype_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MembershipPortal.data.ProductTargetMarket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("datecreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("registrationid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("targetmarket_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("targetmarket_id");

                    b.ToTable("ProductTargetMarkets");
                });

            modelBuilder.Entity("MembershipPortal.data.SegmentCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SegmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SegmentDefinition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegmentTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ID");

                    b.HasIndex("SegmentCode")
                        .IsUnique();

                    b.ToTable("SegmentCategories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            SegmentCode = "70000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Arts/Crafts/Needlework"
                        },
                        new
                        {
                            ID = 2,
                            SegmentCode = "68000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Audio Visual/Photography"
                        },
                        new
                        {
                            ID = 3,
                            SegmentCode = "53000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Beauty/Personal Care/Hygiene"
                        },
                        new
                        {
                            ID = 4,
                            SegmentCode = "83000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Building Products"
                        },
                        new
                        {
                            ID = 5,
                            SegmentCode = "74000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Camping"
                        },
                        new
                        {
                            ID = 6,
                            SegmentCode = "47000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Cleaning/Hygiene Products"
                        },
                        new
                        {
                            ID = 7,
                            SegmentCode = "67000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Clothing"
                        },
                        new
                        {
                            ID = 8,
                            SegmentCode = "66000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Communications"
                        },
                        new
                        {
                            ID = 9,
                            SegmentCode = "65000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Computing"
                        },
                        new
                        {
                            ID = 10,
                            SegmentCode = "94000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Crops"
                        },
                        new
                        {
                            ID = 11,
                            SegmentCode = "58000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Cross Segment"
                        },
                        new
                        {
                            ID = 12,
                            SegmentCode = "78000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Electrical Supplies"
                        },
                        new
                        {
                            ID = 13,
                            SegmentCode = "50000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Food/Beverage/Tobacco"
                        },
                        new
                        {
                            ID = 14,
                            SegmentCode = "63000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Footwear"
                        },
                        new
                        {
                            ID = 15,
                            SegmentCode = "87000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Fuels/Gases"
                        },
                        new
                        {
                            ID = 16,
                            SegmentCode = "51000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Healthcare"
                        },
                        new
                        {
                            ID = 17,
                            SegmentCode = "72000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Home Appliances"
                        },
                        new
                        {
                            ID = 18,
                            SegmentCode = "93000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Horticulture Plants"
                        },
                        new
                        {
                            ID = 19,
                            SegmentCode = "75000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Household/Office Furniture/Furnishings"
                        },
                        new
                        {
                            ID = 20,
                            SegmentCode = "73000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Kitchenware and Tableware"
                        },
                        new
                        {
                            ID = 21,
                            SegmentCode = "81000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Lawn/Garden Supplies"
                        },
                        new
                        {
                            ID = 22,
                            SegmentCode = "89000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Live Animals"
                        },
                        new
                        {
                            ID = 23,
                            SegmentCode = "88000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Lubricants"
                        },
                        new
                        {
                            ID = 24,
                            SegmentCode = "96000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Monetary Assets"
                        },
                        new
                        {
                            ID = 25,
                            SegmentCode = "61000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Music"
                        },
                        new
                        {
                            ID = 26,
                            SegmentCode = "64000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Personal Accessories"
                        },
                        new
                        {
                            ID = 27,
                            SegmentCode = "10000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Pet Care/Food"
                        },
                        new
                        {
                            ID = 28,
                            SegmentCode = "79000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Plumbing/Heating/Ventilation/Air Conditioning"
                        },
                        new
                        {
                            ID = 29,
                            SegmentCode = "98000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Raw Materials (Non Food)"
                        },
                        new
                        {
                            ID = 30,
                            SegmentCode = "85000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Safety/Protection - DIY"
                        },
                        new
                        {
                            ID = 31,
                            SegmentCode = "91000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Safety/Security/Surveillance"
                        },
                        new
                        {
                            ID = 32,
                            SegmentCode = "95000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Services/Vending Machines"
                        },
                        new
                        {
                            ID = 33,
                            SegmentCode = "71000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Sports Equipment"
                        },
                        new
                        {
                            ID = 34,
                            SegmentCode = "62000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Stationery/Office Machinery/Occasion Supplies"
                        },
                        new
                        {
                            ID = 35,
                            SegmentCode = "92000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Storage/Haulage Containers"
                        },
                        new
                        {
                            ID = 36,
                            SegmentCode = "60000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Textual/Printed/Reference Materials"
                        },
                        new
                        {
                            ID = 37,
                            SegmentCode = "84000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Tool Storage/Workshop Aids"
                        },
                        new
                        {
                            ID = 38,
                            SegmentCode = "80000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Tools/Equipment - Hand"
                        },
                        new
                        {
                            ID = 39,
                            SegmentCode = "82000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Tools/Equipment - Power"
                        },
                        new
                        {
                            ID = 40,
                            SegmentCode = "86000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Toys/Games"
                        },
                        new
                        {
                            ID = 41,
                            SegmentCode = "77000000",
                            SegmentDefinition = "",
                            SegmentTitle = "Vehicle"
                        });
                });

            modelBuilder.Entity("MembershipPortal.data.State", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("country_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("country_id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("MembershipPortal.data.TargetMarket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("id");

                    b.ToTable("TargetMarkets");
                });

            modelBuilder.Entity("MembershipPortal.data.ClassCategory", b =>
                {
                    b.HasOne("MembershipPortal.data.FamilyCategory", "FamilyCategory")
                        .WithMany()
                        .HasForeignKey("FamilyCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FamilyCategory");
                });

            modelBuilder.Entity("MembershipPortal.data.Company", b =>
                {
                    b.HasOne("MembershipPortal.data.Country", "Countries")
                        .WithMany()
                        .HasForeignKey("country_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MembershipPortal.data.LocalGovt", "LocalGovts")
                        .WithMany()
                        .HasForeignKey("localgovt_id");

                    b.HasOne("MembershipPortal.data.CompanySectorCategory", "CompanySectorCategories")
                        .WithMany()
                        .HasForeignKey("sectorcategory_id");

                    b.HasOne("MembershipPortal.data.CompanySectorType", "CompanySectorTypes")
                        .WithMany()
                        .HasForeignKey("sectortype_id");

                    b.Navigation("CompanySectorCategories");

                    b.Navigation("CompanySectorTypes");

                    b.Navigation("Countries");

                    b.Navigation("LocalGovts");
                });

            modelBuilder.Entity("MembershipPortal.data.ContactInformation", b =>
                {
                    b.HasOne("MembershipPortal.data.HeardAboutUs", "HeardAboutUs")
                        .WithMany()
                        .HasForeignKey("heardaboutus_id");

                    b.Navigation("HeardAboutUs");
                });

            modelBuilder.Entity("MembershipPortal.data.ExternalUnifiedModel", b =>
                {
                    b.HasOne("MembershipPortal.data.Product", "Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MembershipPortal.data.FamilyCategory", b =>
                {
                    b.HasOne("MembershipPortal.data.SegmentCategory", "SegmentCategory")
                        .WithMany()
                        .HasForeignKey("SegmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SegmentCategory");
                });

            modelBuilder.Entity("MembershipPortal.data.GTINRequest", b =>
                {
                    b.HasOne("MembershipPortal.data.ExternalEntries.Models.CompanyModel", "Companies")
                        .WithMany()
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MembershipPortal.data.GTINFee", "GTINFee")
                        .WithMany()
                        .HasForeignKey("gtinfee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");

                    b.Navigation("GTINFee");
                });

            modelBuilder.Entity("MembershipPortal.data.LocalGovt", b =>
                {
                    b.HasOne("MembershipPortal.data.State", "States")
                        .WithMany()
                        .HasForeignKey("state_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("States");
                });

            modelBuilder.Entity("MembershipPortal.data.PharmaceuticalInformation", b =>
                {
                    b.HasOne("MembershipPortal.data.Product", "Product")
                        .WithMany("PharmaceuticalInformation_Product")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MembershipPortal.data.Product", b =>
                {
                    b.HasOne("MembershipPortal.data.BrandInformation", "BrandInformation")
                        .WithMany("Products")
                        .HasForeignKey("brandinformation_id");

                    b.HasOne("MembershipPortal.data.BrickCategory", "BrickCategory")
                        .WithMany("Products")
                        .HasForeignKey("brickcategory_id");

                    b.HasOne("MembershipPortal.data.NetContent", "NetContent")
                        .WithMany("Products")
                        .HasForeignKey("netcontent_id");

                    b.HasOne("MembershipPortal.data.PackageLevel", "PackageLevel")
                        .WithMany()
                        .HasForeignKey("packaginglevel_id");

                    b.HasOne("MembershipPortal.data.PackagingType", "PackagingType")
                        .WithMany("Products")
                        .HasForeignKey("packagingtype_id");

                    b.Navigation("BrandInformation");

                    b.Navigation("BrickCategory");

                    b.Navigation("NetContent");

                    b.Navigation("PackageLevel");

                    b.Navigation("PackagingType");
                });

            modelBuilder.Entity("MembershipPortal.data.ProductTargetMarket", b =>
                {
                    b.HasOne("MembershipPortal.data.Product", "Product")
                        .WithMany("ProductTargetMarket")
                        .HasForeignKey("product_id");

                    b.HasOne("MembershipPortal.data.TargetMarket", "TargetMarket")
                        .WithMany("ProductTargetMarket")
                        .HasForeignKey("targetmarket_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("TargetMarket");
                });

            modelBuilder.Entity("MembershipPortal.data.State", b =>
                {
                    b.HasOne("MembershipPortal.data.Country", "Country")
                        .WithMany()
                        .HasForeignKey("country_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MembershipPortal.data.BrandInformation", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MembershipPortal.data.BrickCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MembershipPortal.data.NetContent", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MembershipPortal.data.PackagingType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MembershipPortal.data.Product", b =>
                {
                    b.Navigation("PharmaceuticalInformation_Product");

                    b.Navigation("ProductTargetMarket");
                });

            modelBuilder.Entity("MembershipPortal.data.TargetMarket", b =>
                {
                    b.Navigation("ProductTargetMarket");
                });
#pragma warning restore 612, 618
        }
    }
}
